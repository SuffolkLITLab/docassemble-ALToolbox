---
comment: |
  This file helps you determine which parts of your interview take a long time to run.

  It generates a python [profile stats file](https://docs.python.org/3/library/profile.html#profile.Profile.dump_stats)
  that you can download and view locally. If your on Mac or Windows, I've heard good things about
  [snakeviz](https://jiffyclub.github.io/snakeviz/)
  
  
  Personally, I'd suggest the following tools (available on Ubuntu, the only ones tested):
 
  * [kcachegrind](https://kcachegrind.github.io/html/Home.html)
    * Linux: Available in `apt` or as a binary in KDE 4.x
    * Mac or Windows: you have to compile from [source](https://www.kde.org/applications/development/kcachegrind/development)
      (TODO(brycew): find better online tools for this)
  * pyprof2calltree
    * Available in pip on all platforms

  You can install and use there tool with the below commands:

  ```
  sudo apt install kcachegrind
  pip install pyprof2calltree

  # test.prof is the name of the downloaded profile file.
  pyprof2calltree -i ~/Downloads/test.prof -k
  ```
---
modules:
  - cProfile
  - pstats
---
objects:
  - download_profile: DAFile
---
code: |
  profile = Profile()
---
code: |
  profile_filename = 'test.prof'
---
code: |
  download_profile.initialize(filename=profile_filename)
  profile.enable()
  start_profile =True
---
code: |
  profile.disable()
  profile.dump_stats(download_profile.path())
  log('Profiling ready at ' + download_profile.url_for())
  del profile
  stop_profile = True
---
comment: |
  Put the below in the question that asks for the thing you're trying to time. 
  For example, al_user_bundle, or tenant_repair_letter_bundle

  question: |
    Your documents are ready  ${start_profile}
  subquestion: |

    [Profiling Report](${ download_profile.url_for() })
    ${ stop_profile }
---