metadata:
  title:  ALToolbox - Income
---
modules: 
  - .income
---
objects:
  - paystub_list: ALPaystubList.using(
      complete_attribute='complete',
      ask_number=True)
  - paystub: ALPaystub.using(
      complete_attribute='gather_list_items',
      there_is_another=False)
  - jobs: ALJobList.using(
      complete_attribute='complete',
      there_is_another=False)
  - job: ALJob
  - incomes: ALIncomeList.using(
      complete_attribute='complete',
      there_is_another=False)
  - income: ALIncome
---
mandatory: True
code: |
  # Paystub list
  paystub_list.gather()
  
  ## Paystub
  #paystub.period
  #get_paystub_sources
  #paystub.gather()
  #
  ## Individual job
  #job.source = 'Random Work'
  #job.value
  #
  ## List of incomes
  #income_sources
  #get_income_sources
  #incomes.gather()
  #
  ## Individual income
  #income.source = 'Random Income'
  #income.value
  
  before_end_so_answers_are_saved
  end
---
id: which to test
question: |
  Which functionality do you want to try?
fields:
  - no label: income_types_to_test
    input type: checkboxes
    choices:
      #- ALSimpleValue: ALSimpleValue
      #- ALValueList: ALValueList
      - ALIncome: ALIncome
      - ALIncomeList: ALIncomeList
      - ALJob: ALJob
      - ALJobList: ALJobList
      - ALPaystub: ALPaystub
      - ALPaystubList: ALPaystubList
      #- ALLedger: ALLedger
      #- ALVehicle: ALVehicle
      #- ALVehicleList: ALVehicleList
      #- ALAsset: ALAsset
      #- ALAssetList: ALAssetList
      #- flatten: flatten
      #- income_period_list: income_period_list
      #- income_period: income_period
      #- recent_years: recent_years
      #- asset_source_list: asset_source_list
      #- income_source_list: income_source_list
      #- non_wage_income_list: non_wage_income_list
      #- expense_source_list: expense_source_list
---
code: |
  job_source_transaction_types = {
    'tips': 'payment',
    'deductions': 'deduction',
    'garnishments': 'deduction'
  }
---
code: |
  # commission, bonus, hourly wage, salary, overtime
  # https://fingercheck.com/the-difference-between-a-paycheck-and-a-pay-stub/
  #Deductions are the amounts subtracted or withheld from the total pay, including the income tax percentage of an employeeâ€™s gross wages.
  #Social security and Medicare are deducted based on the income over the set threshold.
  #Other deductions can include state and local income taxes, employee 401K contributions, insurance payments, profit sharing, union dues, garnishments and unemployment insurance etc.
  job_income_choices = [
    ('tips', 'Tips'),
    ('deductions', 'Deductions'),
    ('garnishments', 'Garnishments')
  ]
---
# PAYSTUBS LIST
---
code: |
  paystub_list[i].complete_attribute='complete'
  paystub_list[i].there_is_another=False
  paystub_list[i].there_are_any=True
  paystub_list[i].source
  paystub_list[i].period
  paystub_list[i].list_item_sources
  paystub_list[i].get_line_item_sources
  paystub_list[i].gather()
  paystub_list[i].complete = True
---
generic object: ALPaystub
code: |
  if x.list_item_sources.any_true():
    for source in x.list_item_sources.true_values():
      x.appendObject(source=source)
  x.get_line_item_sources = True
---
generic object: ALPaystub
code: |
  x[i].transaction_type = job_source_transaction_types[x[i].source]
  x[i].value
  x[i].complete = True
---
id: how many jobs
question: |
  How many jobs do you have?
fields:
  - no label: paystub_list.target_number
---
id: job name for paystub
generic object: ALPaystub
question: |
  What is the name of this job?
fields:
  - Job name: x.source
---
id: list items
generic object: ALPaystub
question: |
  Does your ${ x.source } job have any of the below?
fields:
  - no label: x.list_item_sources
    datatype: checkboxes
    code: job_income_choices
---
# PAYSTUB
---
code: |
  if list_item_sources.any_true():
    for source in list_item_sources.true_values():
      paystub.appendObject(source=source)
  get_paystub_sources = True
---
code: |
  paystub[i].transaction_type = job_source_transaction_types[paystub[i].source]
  paystub[i].value
  paystub[i].gather_list_items = True
---
id: list items
question: |
  Does your (paystub) job have any of the below?
fields:
  - no label: list_item_sources
    datatype: checkboxes
    code: job_income_choices
---
id: paystub period
generic object: ALPaystub
question: |
  Tell us about your (paystub) job hours
fields:
  - Hourly or salary?: x.is_hourly
    input type: radio
    choices:
      - Hourly: True
      - Salary: False
  - How often do you get paid?: x.period
    input type: radio
    code: |
      income_period_list()
  - How many hours do you work during that time?: x.hours_per_period
    input type: number
    show if: x.is_hourly
---
#  - How much do you get paid per hour?: 
id: payment value
generic object: ALPaystub
if: |
  x[i].transaction_type != 'deduction'
question: |
  What how much do you get paid for ${ x[i].source }?
fields:
  - Amount: x[i].value
    datatype: currency
---
id: deduction value
generic object: ALPaystub
if: |
  x[i].transaction_type == 'deduction'
question: |
  What is removed from your paycheck for the ${ x[i].source }?
fields:
  - Amount: x[i].value
    datatype: currency
---
# JOBS
---
id: single job value
generic object: ALJob
question: |
  What how much do you get paid for ${ x.source }?
fields:
  - Amount: x.value
    datatype: currency
  - Period: x.period
    input type: radio
    code: |
      income_period_list()
---
# INCOMES
---
code: |
  if income_sources.any_true():
    for source in income_sources.true_values():
      one_income = incomes.appendObject(source=source)
  get_income_sources = True
---
generic object: ALIncomeList
code: |
  x[i].value
  x[i].complete = True
---
id: which incomes
question: |
  What are your sources of income?
fields:
  - no label: income_sources
    datatype: checkboxes
    code: |
      income_source_list()
---
# ONE INCOME
---
id: income value
generic object: ALIncome
question: |
  What how much do you get paid for ${ x.source }?
fields:
  - Amount: x.value
    datatype: currency
  - Period: x.period
    input type: radio
    code: |
      income_period_list()
---
# ENDING SCREENS
---
id: before_end_so_answers_are_saved
question: |
  Avoid re-entering the answers
continue button field: before_end_so_answers_are_saved
---
id: end
event: end
question: |
  Your answers
subquestion: |

  ## List of paystubs (jobs)
  
  All jobs together:
  
  * **gross**: ${ currency( paystub_list.gross() ) }
  * **net**: ${ currency( paystub_list.net() ) }
  
  
  % for one_paystub in paystub_list:
  ### ${ one_paystub.source }
  
  Totals
  
  * **gross**: ${ currency( one_paystub.gross() ) }
  * **net**: ${ currency( one_paystub.net() ) }
  
  ## Line items
  
  Money coming in:
  
  % for line_item in one_paystub.line_items(transaction_type='payment'):
  * ${ line_item.source }: ${currency( one_paystub.period_value( line_item, times_per_year=1 ))}
  % endfor
  
  Money going out:
  
  % for line_item in one_paystub.line_items(transaction_type='deduction'):
  * ${ line_item.source }: ${currency( one_paystub.absolute_period_value( line_item, times_per_year=1 ))}
  % endfor
  
  % endfor

comment: |
  
  % for line_item in one_paystub.line_items_for_period():
  * ${ line_item.source }: ${currency( line_item.value )}
  % endfor
  
  ## One paystub
  
  paystub gross: ${ currency( paystub.gross() ) } per year
  
  paystub net: ${ currency( paystub.net() ) } per year
  
  ## Regular job
  
  ${ job.source } gross: ${ currency( job.value ) } ${ job.period } times per year
  
  ## One income
  
  ${ income.source } income: ${ currency( income.value ) } ${ income.period } times per year
  
  ## List of incomes
  
  Other incomes:
  
  % for one_income in incomes:
  * ${ one_income.source }: ${ currency( one_income.value ) } ${ one_income.period } times per year
  % endfor
---