metadata:
  title:  ALToolbox - Business Days
---
modules: 
  - .business_days
---
mandatory: True
question: |
  Introduction to the business_days module
subquestion: |
  Our business_days module provides 3 functions, and this demo shows you how to call them. 
  
  **non_business_days** - returns a list of non-business days <BR>
  **is_business_day** - returns a boolean True/False <BR>
  **get_next_business_day** - returns the next business day <BR>
  
  Input parameters for all of them are basically the same:
  
  1. start_date - **required**. ex: '02/15/2022'
  1. add_n_days - integer, **default is 0**
  1. country - string, **default is 'US'**
  1. state - string, **default is 'MA'**
  1. province - string, **default is None**
  1. add_holidays - dict, **default is None** 
      - Used to add local holidays
      - ex: add_special_days = {
    '2022-02-03': "Special Day1", 
    '2022-02-04': "Special Day2"
  }
  1. remove_holidays - list of strings, **default is None**. 
      - Used to delete obsolete standard holidays
      - ex: delete_days = ["evacuation"], note that the string is case insensitive and can be a partial holiday name  
      - For MA, the module already removed the Evacuation Day
  1. first_n_dates - integer, **default is 0**
      - Used only in function **non_business_days** to extract the first n non-business days      
field: intro
---
question: |
  Pick a date and get the next business day
fields: 
  - Start date: my_date
    datatype: date
    default: '2/2/2022'
  - How many days to wait: wait_days
    datatype: integer
    default: 1
---
mandatory: True
question: |  
  Results from calling the 3 functions
subquestion: |
  You entered ${my_date}, and you wanted to wait for ${wait_days} day(s).
  
  Is ${my_date} a business day in MA, USA? ${ma_b_date}<br>
  The next business day after the waiting period is ${ma_next_bdate}     
  
  The first 20 non-business days in **MA of USA** in 2022: <br>
  %for day, name in ma_off_days.items():
    ${day}: ${name}<br>
  %endfor
  
  The first 20 non-business days in **NY of USA** in 2022: <br>
  %for day, name in ny_off_days.items():
    ${day}: ${name}<br>
  %endfor
  
  The first 20 non-business days in **Nova Scotia of Canada** in 2022: <br>
  %for day, name in canada_off_days.items():
    ${day}: ${name}<br>
  %endfor
  
---
comment: Specify these inputs in a separate code block so they can be reused
code: |  
  delete_days = ["martin"]    
  add_special_days = {
    '2022-02-03': "Special Day1", 
    '2022-02-04': "Special Day2"
  }
---
code: |  
  ma_next_bdate = get_next_business_day(start_date=my_date, add_n_days=wait_days, add_holidays=add_special_days)   
  
  ma_b_date = is_business_day(start_date=my_date, add_holidays=add_special_days)
  
  ma_off_days = non_business_days(start_date=my_date, add_holidays=add_special_days, remove_holidays=delete_days, first_n_dates=20)
  
  ny_off_days = non_business_days(start_date=my_date, state='NY', first_n_dates=20)
  
  canada_off_days = non_business_days(start_date=my_date, country='CAN', province='NS', first_n_dates=20)